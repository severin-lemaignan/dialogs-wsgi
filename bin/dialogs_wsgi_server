#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import logging; logger = logging.getLogger("dialogs")
FORMAT = '%(asctime)s - %(levelname)s: %(message)s'
logging.basicConfig(format=FORMAT, level=logging.DEBUG)

import time
from itertools import imap
import random

from cgi import escape
import sys, os
from flup.server.fcgi import WSGIServer
import urlparse

from dialogs.resources_manager import ResourcePool
from dialogs.parsing.parser import Parser
import dialogs.helpers.printers
dialogs.helpers.printers.DEFAULT_OUTPUT_MODE="css"

from jinja2 import Environment, FileSystemLoader

PREFIX="/var/www/dialogs-wsgi"

env = Environment(loader=FileSystemLoader(PREFIX + "/share/tpl"))
tpl = env.get_template('base.tpl')

ResourcePool().init()
parser = Parser()

with open(PREFIX + "/share/corpus", 'r') as f:
    corpus = list(f)

def fixencoding(s):
     return s.encode("utf-8")

def process_dialogs(path, options):

    logger.info("Options: %s" % options)

    input = options.get("s", None)

    preprocessed_sentences = []
    parsed_sentences = []
    if input:
        logger.info("Processing sentence <%s>" % input)
        preprocessed_sentences = parser.preprocess(input[0], None)
        parsed_sentences = parser.parse(preprocessed_sentences, None)

    return imap(fixencoding, tpl.generate(suggestion = random.choice(corpus), preprocessed_sentences = preprocessed_sentences, parsed_sentences = [str(s) for s in parsed_sentences]))

def app(environ, start_response):

    start_response('200 OK', [('Content-Type', 'text/html')])

    path = environ["PATH_INFO"].decode("utf-8")

    options = urlparse.parse_qs(environ["QUERY_STRING"])


    return process_dialogs(path, options)


if __name__ == '__main__':
    logger.info("Starting to serve...")
    #WSGIServer(app, bindAddress = ("127.0.0.1", 8080)).run()
    #WSGIServer(app, bindAddress = "/var/www/dialogs/fcgi.sock").run()
    WSGIServer(app).run()
